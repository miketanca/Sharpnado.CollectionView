<?xml version="1.0" encoding="utf-8" ?>

<ContentPage
    x:Class="MauiSample.Presentation.Views.GridPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:MauiSample.Presentation.Converters"
    xmlns:sho="http://sharpnado.com"
    xmlns:taskLoaderView="clr-namespace:Sharpnado.TaskLoaderView;assembly=Sharpnado.Maui.TaskLoaderView"
    xmlns:viewModels="clr-namespace:MauiSample.Presentation.ViewModels"
    xmlns:views="clr-namespace:MauiSample.Presentation.Views"
    Padding="0"
    x:DataType="viewModels:GridPageViewModel"
    BackgroundColor="{StaticResource DarkerSurface}"
    NavigationPage.HasNavigationBar="False">

    <ContentPage.Resources>
        <ResourceDictionary>

            <Style x:Key="SegmentedTabStyle" TargetType="sho:UnderlinedTabItem">
                <Setter Property="SelectedTabColor" Value="{StaticResource Accent}" />
                <Setter Property="LabelSize" Value="16" />
                <Setter Property="UnderlineHeight" Value="0" />
                <Setter Property="UnselectedLabelColor" Value="{StaticResource TextSecondaryDarkColor}" />
            </Style>

            <DataTemplate x:Key="GridDudeTemplate">
                <sho:DraggableViewCell x:Name="DraggableViewCell">
                    <ContentView>
                        <views:SillyGridCell
                            Margin="10"
                            Background="{StaticResource DarkSurface}"
                            Style="{StaticResource BorderDarkerNeumorphismBottom}">
                            <views:SillyGridCell.Triggers>
                                <DataTrigger
                                    Binding="{Binding Source={x:Reference DraggableViewCell}, Path=IsDragAndDropping}"
                                    TargetType="views:SillyGridCell"
                                    Value="True">
                                    <Setter Property="Background" Value="{StaticResource DarkDraggedSurface}" />
                                </DataTrigger>
                            </views:SillyGridCell.Triggers>
                        </views:SillyGridCell>
                    </ContentView>
                </sho:DraggableViewCell>
            </DataTemplate>

            <DataTemplate x:Key="HorizontalDudeTemplate">
                <sho:DraggableViewCell x:Name="DraggableViewCell">
                    <ContentView>
                        <views:SillyHorizontalCell
                            Margin="10"
                            Background="{StaticResource DarkSurface}"
                            Style="{StaticResource BorderDarkerNeumorphismBottom}">
                            <views:SillyHorizontalCell.Triggers>
                                <DataTrigger
                                    Binding="{Binding Source={x:Reference DraggableViewCell}, Path=IsDragAndDropping}"
                                    TargetType="views:SillyHorizontalCell"
                                    Value="True">
                                    <Setter Property="Background" Value="{StaticResource DarkDraggedSurface}" />
                                </DataTrigger>
                            </views:SillyHorizontalCell.Triggers>
                        </views:SillyHorizontalCell>
                    </ContentView>
                </sho:DraggableViewCell>
            </DataTemplate>

            <DataTemplate x:Key="VerticalDudeTemplate">
                <sho:DraggableViewCell x:Name="DraggableViewCell">
                    <ContentView>
                        <views:SillyListCell
                            Margin="16,8"
                            Background="{StaticResource DarkSurface}"
                            Style="{StaticResource BorderDarkerNeumorphismBottom}">
                            <views:SillyListCell.Triggers>
                                <DataTrigger
                                    Binding="{Binding Source={x:Reference DraggableViewCell}, Path=IsDragAndDropping}"
                                    TargetType="views:SillyListCell"
                                    Value="True">
                                    <Setter Property="Background" Value="{StaticResource DarkDraggedSurface}" />
                                </DataTrigger>
                            </views:SillyListCell.Triggers>
                        </views:SillyListCell>
                    </ContentView>
                </sho:DraggableViewCell>
            </DataTemplate>

            <views:DudeTemplateSelector
                x:Key="DudeTemplateSelector"
                GridTemplate="{StaticResource GridDudeTemplate}"
                HorizontalTemplate="{StaticResource HorizontalDudeTemplate}"
                VerticalTemplate="{StaticResource VerticalDudeTemplate}" />

        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>
        <Grid RowDefinitions="Auto,*">
            <Grid.Margin>
                <OnPlatform x:TypeArguments="Thickness">
                    <On Platform="iOS">0, -45, 0, -35</On>
                    <On Platform="Android">0</On>
                </OnPlatform>
            </Grid.Margin>

            <taskLoaderView:TaskLoaderView
                Grid.Row="1"
                IsClippedToBounds="False"
                Style="{StaticResource SillyTaskLoader}"
                TaskLoaderNotifier="{Binding SillyPeopleLoaderNotifier}"
                VerticalOptions="Fill">
                <RefreshView
                    Command="{Binding SillyPeopleLoaderNotifier.RefreshCommand}"
                    IsClippedToBounds="False"
                    IsEnabled="{Binding Source={x:Reference DragAndDropSwitch}, Path=IsToggled, Converter={converters:NotConverter}}"
                    IsRefreshing="{Binding SillyPeopleLoaderNotifier.ShowRefresher}"
                    RefreshColor="{StaticResource Accent}">
                    <sho:CollectionView
                        x:Name="HorizontalListView"
                        CollectionLayout="{Binding Mode, Converter={converters:ListModeToListLayout}}"
                        CollectionLayoutChanging="ListLayoutChanging"
                        CollectionPadding="10,30,10,75"
                        ColumnCount="2"
                        CurrentIndex="{Binding CurrentIndex, Mode=TwoWay}"
                        DragAndDropEndedCommand="{Binding OnDragEnded}"
                        DragAndDropStartedCommand="{Binding OnDragStarted}"
                        DragAndDropTrigger="Pan"
                        EnableDragAndDrop="{Binding Source={x:Reference DragAndDropSwitch}, Path=IsToggled}"
                        InfiniteListLoader="{Binding SillyPeoplePaginator}"
                        ItemHeight="120"
                        ItemTemplate="{StaticResource DudeTemplateSelector}"
                        ItemWidth="120"
                        ItemsSource="{Binding SillyPeople}"
                        ScrollBeganCommand="{Binding OnScrollBeginCommand}"
                        ScrollEndedCommand="{Binding OnScrollEndCommand}"
                        TapCommand="{Binding TapCommand}" />

                </RefreshView>
            </taskLoaderView:TaskLoaderView>

            <VerticalStackLayout
                BackgroundColor="{StaticResource DarkSurface}"
                Shadow="{StaticResource DarkBottomShadow}"
                Spacing="0">
                <VerticalStackLayout.Padding>
                    <OnPlatform x:TypeArguments="Thickness">
                        <On Platform="iOS">0, 60, 20, 20</On>
                        <On Platform="Android">0, 30, 20, 20</On>
                    </OnPlatform>
                </VerticalStackLayout.Padding>

                <Grid ColumnDefinitions="60,*, 60" RowDefinitions="30, 30, 15, 40">
                    <ImageButton
                        Grid.RowSpan="2"
                        BackgroundColor="{StaticResource DarkSurface}"
                        Command="{Binding GoBackCommand}"
                        HeightRequest="40"
                        Source="leftarrow.png"
                        VerticalOptions="Center" />

                    <Label
                        Grid.Row="0"
                        Grid.Column="1"
                        FontAttributes="Italic"
                        FontSize="22"
                        Text="Sharpnado's"
                        TextColor="{StaticResource Accent}" />

                    <Label
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="0,-10,0,0"
                        FontAttributes="Bold"
                        FontSize="30"
                        Text="CollectionView"
                        TextColor="White" />

                    <Image
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="1"
                        Grid.ColumnSpan="2"
                        HeightRequest="60"
                        HorizontalOptions="End"
                        Source="island.png"
                        VerticalOptions="Center"
                        WidthRequest="60">
                        <Image.Shadow>
                            <Shadow
                                Brush="{StaticResource Primary}"
                                Opacity="1"
                                Radius="10" />
                        </Image.Shadow>
                    </Image>

                    <HorizontalStackLayout
                        Grid.Row="3"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        HeightRequest="40"
                        HorizontalOptions="End"
                        Spacing="10">

                        <HorizontalStackLayout
                            Margin="16,0,0,0"
                            Spacing="10"
                            VerticalOptions="Fill">
                            <Label
                                Margin="0,0,0,2"
                                FontSize="12"
                                Text="Drag and Drop"
                                TextColor="White"
                                VerticalOptions="Center"
                                VerticalTextAlignment="Center" />
                            <Switch x:Name="DragAndDropSwitch" VerticalOptions="Center" />
                        </HorizontalStackLayout>

                        <HorizontalStackLayout x:Name="ColumnCountContainer" VerticalOptions="Fill">
                            <Label
                                Margin="0,0,0,2"
                                FontSize="12"
                                Text="Column Count"
                                TextColor="White"
                                VerticalOptions="Center"
                                VerticalTextAlignment="Center" />
                            <Picker
                                x:Name="ColumnPicker"
                                FontAttributes="Bold"
                                FontSize="18"
                                TextColor="{StaticResource Primary}">
                                <Picker.Margin>
                                    <OnPlatform x:TypeArguments="Thickness">
                                        <On Platform="iOS">10,-5,0,0</On>
                                        <On Platform="Android">10,0,0,0</On>
                                    </OnPlatform>
                                </Picker.Margin>
                            </Picker>
                        </HorizontalStackLayout>
                    </HorizontalStackLayout>

                </Grid>


                <sho:TabHostView
                    x:Name="TabHost"
                    Margin="0,10,0,0"
                    BackgroundColor="{StaticResource DarklessSurface}"
                    CornerRadius="25"
                    HeightRequest="50"
                    HorizontalOptions="Center"
                    IsSegmented="True"
                    SegmentedOutlineColor="#303030"
                    SelectedIndex="{Binding Mode, Converter={converters:ListModeToInt}, Mode=TwoWay}"
                    TabType="Fixed"
                    VerticalOptions="EndAndExpand"
                    WidthRequest="280">
                    <sho:TabHostView.Shadow>
                        <Shadow
                            Brush="#303030"
                            Opacity="1"
                            Radius="10"
                            Offset="0,10" />
                    </sho:TabHostView.Shadow>
                    <sho:TabHostView.Tabs>
                        <sho:UnderlinedTabItem Label="Grid" Style="{StaticResource SegmentedTabStyle}" />
                        <sho:UnderlinedTabItem Label="Horizontal" Style="{StaticResource SegmentedTabStyle}" />
                        <sho:UnderlinedTabItem Label="Vertical" Style="{StaticResource SegmentedTabStyle}" />
                    </sho:TabHostView.Tabs>
                </sho:TabHostView>
            </VerticalStackLayout>

        </Grid>
    </ContentPage.Content>
</ContentPage>
